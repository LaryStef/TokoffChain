<<<<<<< HEAD
version: "3.9"
services:
  postgres:
    container_name: postgres_container
    image: postgres:17.4-alpine
    command:
      - "postgres"
      - "-c"
      - "config_file=/etc/postgresql.conf"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # - config-file:/etc/postgresql.conf:ro
    ports:
      - "127.0.0.1:5432:5432"
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
=======
services:
  postgres:
    container_name: postgres
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile
    image: postgres:17
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME:-postgres}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      PGDATA: "/var/lib/postgresql/data/pgdata"
      POSTGRES_INITDB_ARGS: "-c config_file=/etc/postgresql/postgresql.conf"
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-postgres}"]
>>>>>>> c429c766e3496e4be8947af799fb5a53d71e1a22
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
<<<<<<< HEAD
      - main

volumes:
  postgres-data

networks:
  main
=======
      - postgres

volumes:
  db:

networks:
  postgres:
>>>>>>> c429c766e3496e4be8947af799fb5a53d71e1a22
